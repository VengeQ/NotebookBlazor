@if (DropDownValues.Any())
{
    <div class="row" style="padding-top:10px">
        <div class="col-md-4">
            <select class="form-control" @onchange="ListClicked">
                @*<option value="0">-- Select Value --</option>*@
                @foreach (var entity in DropDownValues)
                {
                    <option value="@entity.Key">
                        @entity.Value
                    </option>
                }
            </select>
        </div>
        <p>@DDKey</p>
    </div>
}
@code {
    [Parameter]
    public IDictionary<int, String> DropDownValues { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            DropDownValues = new Dictionary<int, String>();
            DropDownValues.Add(0, "-- Select Value --");
            DropDownValues.Add(1, "First");
            DropDownValues.Add(2, "Second");
        });
    }

    [Parameter]
    public EventCallback<(int, String)> OnValueChanged { get; set; }
    //[Parameter]
    //public EventCallback<IDictionary<int, String>> DropDownValuesChanged { get; set; }

    private String DDValue;
    private int DDKey;

    public Task ListClicked(ChangeEventArgs e)
    {
        DDKey = Int32.Parse(e.Value.ToString());
        DropDownValues.TryGetValue(DDKey, out DDValue);

        return OnValueChanged.InvokeAsync((DDKey, DDValue));
    }
}
